{"version":3,"sources":["assets/Script/ccutils/multiresolution/ContentAdapter.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAM,IAAA,KAAwB,EAAE,CAAC,UAAU,EAAnC,OAAO,aAAA,EAAE,QAAQ,cAAkB,CAAC;AAE5C;;;;;;;;;;;;;;;;;;;;;;;;;GAyBG;AAEH;IAA4C,kCAAY;IAAxD;;IAiDA,CAAC;IAhDG,+BAAM,GAAN;QACI,kBAAkB;QAClB,qBAAqB;QACrB,6FAA6F;QAC7F,qGAAqG;QACrG,6FAA6F;QAC7F,8DAA8D;QAC9D,gEAAgE;QAChE,IAAI;QAEJ,yCAAyC;QACzC,IAAI,kBAAkB,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACtI,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,kBAAkB,CAAC;QACrD,IAAI,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,kBAAkB,CAAC;QAEvD,uBAAuB;QACvB,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,KAAK,GAAG,SAAS,CAAC,CAAC;QAChF,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,aAAa,EAAE,CAAC,MAAM,GAAG,UAAU,CAAC,CAAC;QAEpF,sCAAsC;QACtC,6CAA6C;QAE7C,kBAAkB;QAClB,mEAAmE;QACnE,4DAA4D;QAC5D,cAAc;QACd,yEAAyE;QACzE,6CAA6C;QAC7C,gEAAgE;QAChE,SAAS;QACT,IAAI;IACR,CAAC;IAhCgB,cAAc;QADlC,OAAO;OACa,cAAc,CAiDlC;IAAD,qBAAC;CAjDD,AAiDC,CAjD2C,EAAE,CAAC,SAAS,GAiDvD;kBAjDoB,cAAc","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\n\n/**\n * @classdesc  游戏主内容节点自适应所有分辨率的脚本\n * @author cc\n * @version 0.1.0\n * @since 2021-08-10\n * @description\n *\n * 用法：\n *      1. 将本组件挂载在节点上即可\n *\n * 适配原理：\n *      1. 将游戏主内容节点的宽高调整为画布的大小，以进行Size适配\n *\n * 注意：\n *      1. 挂载这个脚本的节点不能加入Widget组件，不然这个适配是没有效果的\n *      2. 目前只支持 SHOW_ALL 模式下的背景缩放适配，不支持其他模式的背景缩放\n *\n *  @example\n    ```\n    // e.g.\n    // 代码中设置 SHOW_ALL 模式的参考代码\n    cc.view.setDesignResolutionSize(720, 1280, cc.ResolutionPolicy.SHOW_ALL);\n\n    // 或者 Canvas 组件中，同时勾选 Fit Width 和 Fit Height \n    ```\n */\n@ccclass\nexport default class ContentAdapter extends cc.Component {\n    onLoad() {\n        // if (CC_DEBUG) {\n        //     cc.log(\"调整前\");\n        //     cc.log(`屏幕分辨率: ${cc.view.getCanvasSize().width} x ${cc.view.getCanvasSize().height}`);\n        //     cc.log(`视图窗口可见区域分辨率: ${cc.view.getVisibleSize().width} x ${cc.view.getVisibleSize().height}`);\n        //     cc.log(`视图中边框尺寸: ${cc.view.getFrameSize().width} x ${cc.view.getFrameSize().height}`);\n        //     cc.log(`设备或浏览器像素比例: ${cc.view.getDevicePixelRatio()}`);\n        //     cc.log(`节点宽高: ${this.node.width} x ${this.node.height}`);\n        // }\n\n        // 1. 先找到 SHOW_ALL 模式适配之后，本节点的实际宽高以及初始缩放值\n        let srcScaleForShowAll = Math.min(cc.view.getCanvasSize().width / this.node.width, cc.view.getCanvasSize().height / this.node.height);\n        let realWidth = this.node.width * srcScaleForShowAll;\n        let realHeight = this.node.height * srcScaleForShowAll;\n\n        // 2. 基于第一步的数据，再做节点宽高适配\n        this.node.width = this.node.width * (cc.view.getCanvasSize().width / realWidth);\n        this.node.height = this.node.height * (cc.view.getCanvasSize().height / realHeight);\n\n        // // 3. 因为本节点的宽高发生了改变，所以要手动更新剩下子节点的宽高\n        // this._updateAllChildNodeWidget(this.node);\n\n        // if (CC_DEBUG) {\n        //     cc.log(`节点在SHOW_ALL模式下展示的宽高: ${realWidth} x ${realHeight}`);\n        //     cc.log(`节点在SHOW_ALL模式下展示的缩放: ${srcScaleForShowAll}`);\n        //     cc.log(\n        //         `节点在SHOW_ALL模式下做全屏处理后的实际宽高（${cc.view.getCanvasSize().width}x${\n        //             cc.view.getCanvasSize().height\n        //         }）等价于于原节点的宽高(${this.node.width}x${this.node.height})`\n        //     );\n        // }\n    }\n\n    // private _updateAllChildNodeWidget(parentNode: cc.Node) {\n    //     if (parentNode == null) {\n    //         return;\n    //     }\n    //     let widget = parentNode.getComponent(cc.Widget);\n    //     if (widget != null) {\n    //         widget.updateAlignment();\n    //     }\n    //     if (parentNode.childrenCount == 0) {\n    //         return;\n    //     }\n    //     parentNode.children.forEach((childNode: cc.Node) => {\n    //         this._updateAllChildNodeWidget(childNode);\n    //     });\n    // }\n}\n"]}