{"version":3,"sources":["assets/shaderScene/waterEffectScene/wave.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["const { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class Wave extends cc.Component {\n\n  @property(cc.Mask)\n  private maskNode: cc.Mask = null;\n\n  private hWater = 200; // 水面高度\n  private nodeArray = []; // 装载水面的点\n  public energyArray = []; // 每个点的能量\n  public nWater = 20; // 细分数\n\n  onLoad() {\n    // 赋予初始值\n    for (let i = 0; i < this.nWater; i++) {\n      this.energyArray[i] = 0;\n    }\n  }\n\n  start() {\n    // 创建水面上点\n    for (let i = 0; i < this.nWater; i++) {\n      let node = { x: 0, y: 0 };\n      node.y = this.hWater;\n      node.x = -360 + ((i + 1) * 720) / this.nWater;\n      this.nodeArray[i] = node;\n    }\n\n    cc.log(this.nodeArray);\n\n    // 最右侧点缓动\n    let obj = this.nodeArray[this.nWater - 1];\n    let time = 0.5;\n    cc.tween(obj)\n      .repeatForever(\n        cc\n          .tween()\n          .to(time, { y: 40 + this.hWater }, { easing: \"sineOut\" })\n          .to(time, { y: 0 + this.hWater }, { easing: \"sineIn\" })\n          .to(time, { y: -40 + this.hWater }, { easing: \"sineOut\" })\n          .to(time, { y: 0 + this.hWater }, { easing: \"sineIn\" })\n      )\n      .start();\n  }\n\n  // 利用遮罩原理，把下方显示\n  private showWater() {\n    // cc.log(this.maskNode)\n   \n    let draw = (<any>this.maskNode)._graphics;\n    // let draw = this.maskNode._graphics;\n    // cc.log(draw)\n    draw.clear();\n    draw.lineWidth = 1;\n    draw.strokeColor = cc.color(255, 0, 0);\n    draw.fillColor = cc.color(0, 255, 0);\n    draw.moveTo(-360, this.hWater);\n    for (let i = 0; i < this.nWater; i += 2) {\n      // 贝塞尔\n      draw.quadraticCurveTo(\n        this.nodeArray[i].x,\n        this.nodeArray[i].y,\n        this.nodeArray[i + 1].x,\n        this.nodeArray[i + 1].y\n      );\n    }\n    // 封闭区域\n    draw.lineTo(360, -640);\n    draw.lineTo(-360, -640);\n    draw.lineTo(-360, this.hWater);\n    draw.fill();\n    draw.stroke();\n  }\n\n  update (dt) {\n    // return;\n       // 左右点互相影响 2 次, 决定波的传播快慢\n       for (let k = 0; k < 2; k++) {\n        for (let i = 0; i < this.nWater; i++) {\n            if (i > 0) {\n                // 0.02 的传播损失\n                // 向左传\n                this.energyArray[i-1] += 0.98 * (this.nodeArray[i].y - this.nodeArray[i-1].y);\n            }\n            if (i < this.nWater - 1) {\n                // 向右传\n                this.energyArray[i+1] += 0.98 * (this.nodeArray[i].y - this.nodeArray[i+1].y);\n            }\n        }\n    }  \n    // 最右侧的跳过\n    for (let i = 0; i < this.nWater - 1; i++) {\n        // 0.02 速度损失\n        this.energyArray[i] *= 0.98;\n        // 改变位置\n        this.nodeArray[i].y += this.energyArray[i] * dt;\n    }\n    this.showWater();\n  }\n}\n"]}