{"version":3,"sources":["assets/shaderScene/CaptureTest/EncodeJPG.ts"],"names":[],"mappings":"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AE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI;KACb,CAAC;IAEF,IAAI,0BAA0B,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IACrF,IAAI,yBAAyB,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;IACvE,IAAI,0BAA0B,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IACxF,IAAI,yBAAyB,GAAG;QAC5B,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI;QAC9C,IAAI,EAAE,IAAI;KACb,CAAC;IAEF,SAAS,eAAe,CAAC,EAAE;QACvB,IAAI,GAAG,GAAG;YACN,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;YAChC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;YAChC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG;YAClC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;SACpC,CAAC;QAEF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;YACzB,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;YACzC,IAAI,CAAC,GAAG,CAAC,EAAE;gBACP,CAAC,GAAG,CAAC,CAAC;aACT;iBAAM,IAAI,CAAC,GAAG,GAAG,EAAE;gBAChB,CAAC,GAAG,GAAG,CAAC;aACX;YACD,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SACzB;QACD,IAAI,IAAI,GAAG;YACP,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;YAC9B,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;SACjC,CAAC;QACF,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;YACzB,IAAI,CAAC,GAAG,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC;YAC1C,IAAI,CAAC,GAAG,CAAC,EAAE;gBACP,CAAC,GAAG,CAAC,CAAC;aACT;iBAAM,IAAI,CAAC,GAAG,GAAG,EAAE;gBAChB,CAAC,GAAG,GAAG,CAAC;aACX;YACD,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;SAC1B;QACD,IAAI,IAAI,GAAG;YACP,GAAG,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW;YAC1C,GAAG,EAAE,WAAW,EAAE,WAAW,EAAE,WAAW;SAC7C,CAAC;QACF,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE;YAC9B,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,CAAC,EAAE,GAAG,EAAE,EAAE;gBAC9B,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;gBACvE,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;gBACzE,CAAC,EAAE,CAAC;aACP;SACJ;IACL,CAAC;IAED,SAAS,iBAAiB,CAAC,OAAO,EAAE,SAAS;QACzC,IAAI,SAAS,GAAG,CAAC,CAAC;QAClB,IAAI,YAAY,GAAG,CAAC,CAAC;QACrB,IAAI,EAAE,GAAG,IAAI,KAAK,EAAE,CAAC;QACrB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;YAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;gBAClC,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,GAAG,EAAE,CAAC;gBACjC,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;gBAC3C,EAAE,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;gBACnC,YAAY,EAAE,CAAC;gBACf,SAAS,EAAE,CAAC;aACf;YACD,SAAS,IAAI,CAAC,CAAC;SAClB;QACD,OAAO,EAAE,CAAC;IACd,CAAC;IAED,SAAS,cAAc;QACnB,MAAM,GAAG,iBAAiB,CAAC,wBAAwB,EAAE,uBAAuB,CAAC,CAAC;QAC9E,OAAO,GAAG,iBAAiB,CAAC,0BAA0B,EAAE,yBAAyB,CAAC,CAAC;QACnF,MAAM,GAAG,iBAAiB,CAAC,wBAAwB,EAAE,uBAAuB,CAAC,CAAC;QAC9E,OAAO,GAAG,iBAAiB,CAAC,0BAA0B,EAAE,yBAAyB,CAAC,CAAC;IACvF,CAAC;IAED,SAAS,kBAAkB;QACvB,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,KAAK,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,IAAI,EAAE,EAAE,GAAG,EAAE,EAAE;YAChC,kBAAkB;YAClB,KAAK,IAAI,EAAE,GAAG,OAAO,EAAE,EAAE,GAAG,OAAO,EAAE,EAAE,EAAE,EAAE;gBACvC,QAAQ,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,GAAG,CAAC;gBAC3B,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;gBACzB,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;gBAC7B,OAAO,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;aAC/B;YACD,kBAAkB;YAClB,KAAK,IAAI,KAAK,GAAG,CAAC,CAAC,OAAO,GAAG,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,OAAO,EAAE,KAAK,EAAE,EAAE;gBACzD,QAAQ,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC;gBAC9B,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;gBAC5B,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;gBAChC,OAAO,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,GAAG,KAAK,CAAC;aACnD;YACD,OAAO,KAAK,CAAC,CAAC;YACd,OAAO,KAAK,CAAC,CAAC;SACjB;IACL,CAAC;IAED,SAAS,eAAe;QACpB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;YAC1B,aAAa,CAAC,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;YAC7B,aAAa,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;YAC1C,aAAa,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,MAAM,CAAC;YAClD,aAAa,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;YAC3C,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;YAC5C,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,QAAQ,CAAC;YACtD,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,KAAK,GAAG,CAAC,CAAC;YAC5C,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAE,IAAI,GAAG,CAAC,CAAC;SAC/C;IACL,CAAC;IAED,eAAe;IACf,SAAS,SAAS,CAAC,EAAE;QACjB,IAAI,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QAClB,IAAI,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;QACvB,OAAO,MAAM,IAAI,CAAC,EAAE;YAChB,IAAI,KAAK,GAAG,CAAC,CAAC,IAAI,MAAM,CAAC,EAAE;gBACvB,OAAO,IAAI,CAAC,CAAC,IAAI,OAAO,CAAC,CAAC;aAC7B;YACD,MAAM,EAAE,CAAC;YACT,OAAO,EAAE,CAAC;YACV,IAAI,OAAO,GAAG,CAAC,EAAE;gBACb,IAAI,OAAO,IAAI,IAAI,EAAE;oBACjB,SAAS,CAAC,IAAI,CAAC,CAAC;oBAChB,SAAS,CAAC,CAAC,CAAC,CAAC;iBAChB;qBACI;oBACD,SAAS,CAAC,OAAO,CAAC,CAAC;iBACtB;gBACD,OAAO,GAAG,CAAC,CAAC;gBACZ,OAAO,GAAG,CAAC,CAAC;aACf;SACJ;IACL,CAAC;IAED,SAAS,SAAS,CAAC,KAAK;QACpB,8EAA8E;QAC9E,OAAO,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;IAED,SAAS,SAAS,CAAC,KAAK;QACpB,SAAS,CAAC,CAAC,KAAK,IAAI,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC;QAC/B,SAAS,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC,CAAC;IAC9B,CAAC;IAED,0BAA0B;IAC1B,SAAS,SAAS,CAAC,IAAI,EAAE,KAAK;QAC1B,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACnC,2BAA2B;QAC3B,IAAI,OAAO,GAAG,CAAC,CAAC;QAChB,IAAI,CAAC,CAAC;QACN,IAAI,EAAE,GAAG,CAAC,CAAC;QACX,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;YACrB,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;YACnB,EAAE,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;YACvB,EAAE,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;YACvB,EAAE,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;YACvB,EAAE,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;YACvB,EAAE,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;YACvB,EAAE,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;YACvB,EAAE,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;YAEvB,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;YACnB,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;YACnB,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;YACnB,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;YACnB,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;YACnB,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;YACnB,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;YACnB,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,CAAC;YAEnB,eAAe;YACf,IAAI,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,aAAa;YACtC,IAAI,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC;YACxB,IAAI,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC;YACxB,IAAI,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC;YAExB,IAAI,CAAC,OAAO,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC,CAAC,aAAa;YAC5C,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,CAAC;YAElC,IAAI,EAAE,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,WAAW,CAAC,CAAC,QAAQ;YAChD,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,aAAa;YAC7C,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;YAE/B,cAAc;YACd,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC,CAAC,aAAa;YAClC,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC;YACpB,KAAK,GAAG,IAAI,GAAG,IAAI,CAAC;YAEpB,oEAAoE;YACpE,IAAI,EAAE,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,GAAG,WAAW,CAAC,CAAC,QAAQ;YAChD,IAAI,EAAE,GAAG,WAAW,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,WAAW;YAC9C,IAAI,EAAE,GAAG,WAAW,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,WAAW;YAC9C,IAAI,EAAE,GAAG,KAAK,GAAG,WAAW,CAAC,CAAC,QAAQ;YAEtC,IAAI,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC,CAAC,aAAa;YAClC,IAAI,GAAG,GAAG,IAAI,GAAG,EAAE,CAAC;YAEpB,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC,CAAC,aAAa;YAC3C,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;YAC7B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;YAC7B,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE,CAAC;YAE7B,OAAO,IAAI,CAAC,CAAC,CAAC,iCAAiC;SAClD;QAED,8BAA8B;QAC9B,OAAO,GAAG,CAAC,CAAC;QACZ,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,EAAE,CAAC,EAAE;YACrB,EAAE,GAAG,IAAI,CAAC,OAAO,CAAC,CAAC;YACnB,EAAE,GAAG,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC;YACvB,EAAE,GAAG,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;YACxB,EAAE,GAAG,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;YACxB,EAAE,GAAG,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;YACxB,EAAE,GAAG,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;YACxB,EAAE,GAAG,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;YACxB,EAAE,GAAG,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,CAAC;YAExB,IAAI,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC;YACrB,IAAI,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC;YACrB,IAAI,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC;YACrB,IAAI,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC;YACrB,IAAI,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC;YACrB,IAAI,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC;YACrB,IAAI,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC;YACrB,IAAI,MAAM,GAAG,EAAE,GAAG,EAAE,CAAC;YAErB,eAAe;YACf,IAAI,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC,aAAa;YAC5C,IAAI,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;YAC9B,IAAI,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;YAC9B,IAAI,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;YAE9B,IAAI,CAAC,OAAO,CAAC,GAAG,OAAO,GAAG,OAAO,CAAC,CAAC,aAAa;YAChD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,GAAG,OAAO,GAAG,OAAO,CAAC;YAEvC,IAAI,IAAI,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,WAAW,CAAC,CAAC,QAAQ;YACtD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC,CAAC,aAAa;YAClD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,GAAG,OAAO,GAAG,IAAI,CAAC;YAEpC,cAAc;YACd,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC,CAAC,aAAa;YACxC,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;YAC1B,OAAO,GAAG,MAAM,GAAG,MAAM,CAAC;YAE1B,oEAAoE;YACpE,IAAI,IAAI,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,GAAG,WAAW,CAAC,CAAC,QAAQ;YACtD,IAAI,IAAI,GAAG,WAAW,GAAG,OAAO,GAAG,IAAI,CAAC,CAAC,WAAW;YACpD,IAAI,IAAI,GAAG,WAAW,GAAG,OAAO,GAAG,IAAI,CAAC,CAAC,WAAW;YACpD,IAAI,IAAI,GAAG,OAAO,GAAG,WAAW,CAAC,CAAC,QAAQ;YAE1C,IAAI,KAAK,GAAG,MAAM,GAAG,IAAI,CAAC,CAAC,aAAa;YACxC,IAAI,KAAK,GAAG,MAAM,GAAG,IAAI,CAAC;YAE1B,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC,CAAC,aAAa;YAChD,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;YAClC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;YACjC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC,GAAG,KAAK,GAAG,IAAI,CAAC;YAElC,OAAO,EAAE,CAAC,CAAC,oCAAoC;SAClD;QAED,oCAAoC;QACpC,IAAI,SAAS,CAAC;QACd,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;YACtB,uEAAuE;YACvE,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;YAC/B,eAAe,CAAC,CAAC,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YAC3F,yCAAyC;SAE5C;QACD,OAAO,eAAe,CAAC;IAC3B,CAAC;IAED,SAAS,SAAS;QACd,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS;QAC5B,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS;QACxB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;QACrB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;QACrB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;QACrB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;QACrB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAgB;QAC9B,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY;QAC1B,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY;QAC1B,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,UAAU;QACxB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW;QACzB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,WAAW;QACzB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,cAAc;QAC5B,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,eAAe;IACjC,CAAC;IAED,SAAS,SAAS,CAAC,UAAU;QACzB,IAAI,CAAC,UAAU;YAAE,OAAO;QAExB,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,cAAc;QAEjC,IAAI,UAAU,CAAC,CAAC,CAAC,KAAK,IAAI;YACtB,UAAU,CAAC,CAAC,CAAC,KAAK,IAAI;YACtB,UAAU,CAAC,CAAC,CAAC,KAAK,IAAI;YACtB,UAAU,CAAC,CAAC,CAAC,KAAK,IAAI,EAAE;YACxB,wDAAwD;YACxD,SAAS,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,oCAAoC;SACzE;aAAM;YACH,oDAAoD;YACpD,SAAS,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,6CAA6C;YACnF,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;YACrB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;YACrB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;YACrB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI;YACrB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,gBAAgB;SACjC;QAED,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5B;IACL,CAAC;IAED,SAAS,SAAS,CAAC,KAAK,EAAE,MAAM;QAC5B,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS;QAC5B,SAAS,CAAC,EAAE,CAAC,CAAC,CAAG,4BAA4B;QAC7C,SAAS,CAAC,CAAC,CAAC,CAAC,CAAI,YAAY;QAC7B,SAAS,CAAC,MAAM,CAAC,CAAC;QAClB,SAAS,CAAC,KAAK,CAAC,CAAC;QACjB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAI,iBAAiB;QAClC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAI,MAAM;QACvB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM;QACvB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAI,MAAM;QACvB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAI,MAAM;QACvB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM;QACvB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAI,MAAM;QACvB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAI,MAAM;QACvB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM;QACvB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAI,MAAM;IAC3B,CAAC;IAED,SAAS,QAAQ;QACb,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS;QAC5B,SAAS,CAAC,GAAG,CAAC,CAAC,CAAI,SAAS;QAC5B,SAAS,CAAC,CAAC,CAAC,CAAC;QACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;YACzB,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;SACxB;QACD,SAAS,CAAC,CAAC,CAAC,CAAC;QACb,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;YACzB,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;SACzB;IACL,CAAC;IAED,SAAS,QAAQ;QACb,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS;QAC5B,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS;QAE5B,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;YACzB,SAAS,CAAC,wBAAwB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAC9C;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;YAC1B,SAAS,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC;SACzC;QAED,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY;QAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;YACzB,SAAS,CAAC,wBAAwB,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAC9C;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,EAAE;YAC3B,SAAS,CAAC,uBAAuB,CAAC,CAAC,CAAC,CAAC,CAAC;SACzC;QAED,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY;QAC1B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;YACzB,SAAS,CAAC,0BAA0B,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAChD;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE,EAAE;YAC1B,SAAS,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3C;QAED,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY;QAC7B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;YACzB,SAAS,CAAC,0BAA0B,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;SAChD;QACD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,IAAI,GAAG,EAAE,CAAC,EAAE,EAAE;YAC3B,SAAS,CAAC,yBAAyB,CAAC,CAAC,CAAC,CAAC,CAAC;SAC3C;IACL,CAAC;IAED,SAAS,QAAQ,CAAC,QAAQ;QACtB,IAAI,OAAO,QAAQ,KAAK,WAAW,IAAI,QAAQ,CAAC,WAAW,KAAK,KAAK;YAAE,OAAO;QAC9E,QAAQ,CAAC,OAAO,CAAC,UAAA,CAAC;YACd,IAAI,OAAO,CAAC,KAAK,QAAQ;gBAAE,OAAO;YAClC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS;YAC5B,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;YACjB,SAAS,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,wBAAwB;YAC1C,IAAI,CAAC,CAAC;YACN,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;gBAClB,SAAS,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC,CAAC,CAAC,CAAC;IACP,CAAC;IAED,SAAS,QAAQ;QACb,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,SAAS;QAC5B,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS;QACxB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,iBAAiB;QAC/B,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM;QACpB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM;QACpB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM;QACpB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM;QACvB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM;QACpB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM;QACvB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK;QACnB,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK;QACtB,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK;IACvB,CAAC;IAED,SAAS,SAAS,CAAC,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,IAAI;QACzC,IAAI,GAAG,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QACrB,IAAI,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC;QAC3B,IAAI,GAAG,CAAC;QACR,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,IAAI,MAAM,GAAG,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;QACnC,gBAAgB;QAChB,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,EAAE,CAAC,EAAE;YAC1B,EAAE,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;SAC7B;QACD,IAAI,IAAI,GAAG,EAAE,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC;QAAC,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;QAClC,WAAW;QACX,IAAI,IAAI,IAAI,CAAC,EAAE;YACX,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,kBAAkB;SACzC;aAAM;YACH,GAAG,GAAG,KAAK,GAAG,IAAI,CAAC;YACnB,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YAC/B,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;SAC3B;QACD,YAAY;QACZ,IAAI,OAAO,GAAG,EAAE,CAAC,CAAC,8BAA8B;QAChD,OAAO,CAAC,OAAO,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,EAAE,OAAO,EAAE,EAAE,GAAG;QAAA,CAAC;QAC3D,8CAA8C;QAC9C,IAAI,OAAO,IAAI,CAAC,EAAE;YACd,SAAS,CAAC,GAAG,CAAC,CAAC;YACf,OAAO,EAAE,CAAC;SACb;QACD,IAAI,CAAC,GAAG,CAAC,CAAC;QACV,IAAI,GAAG,CAAC;QACR,OAAO,CAAC,IAAI,OAAO,EAAE;YACjB,IAAI,QAAQ,GAAG,CAAC,CAAC;YACjB,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,OAAO,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG;YAC/C,IAAI,QAAQ,GAAG,CAAC,GAAG,QAAQ,CAAC;YAC5B,IAAI,QAAQ,IAAI,GAAG,EAAE;gBACjB,GAAG,GAAG,QAAQ,IAAI,CAAC,CAAC;gBACpB,KAAK,IAAI,QAAQ,GAAG,CAAC,EAAE,QAAQ,IAAI,GAAG,EAAE,EAAE,QAAQ;oBAC9C,SAAS,CAAC,SAAS,CAAC,CAAC;gBACzB,QAAQ,GAAG,QAAQ,GAAG,GAAG,CAAC;aAC7B;YACD,GAAG,GAAG,KAAK,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;YACpB,SAAS,CAAC,IAAI,CAAC,CAAC,QAAQ,IAAI,CAAC,CAAC,GAAG,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;YACjD,SAAS,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;YACxB,CAAC,EAAE,CAAC;SACP;QACD,IAAI,OAAO,IAAI,GAAG,EAAE;YAChB,SAAS,CAAC,GAAG,CAAC,CAAC;SAClB;QACD,OAAO,EAAE,CAAC;IACd,CAAC;IAED,SAAS,mBAAmB;QACxB,IAAI,IAAI,GAAG,MAAM,CAAC,YAAY,CAAC;QAC/B,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,EAAE,oBAAoB;YAChD,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;SACpB;IACL,CAAC;IAED,IAAI,CAAC,MAAM,GAAG,UAAU,KAAK,EAAE,OAAO;QAElC,IAAI,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QAEtC,IAAI,OAAO;YAAE,UAAU,CAAC,OAAO,CAAC,CAAC;QAEjC,wBAAwB;QACxB,OAAO,GAAG,IAAI,KAAK,EAAE,CAAC;QACtB,OAAO,GAAG,CAAC,CAAC;QACZ,OAAO,GAAG,CAAC,CAAC;QAEZ,mBAAmB;QACnB,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM;QACzB,SAAS,EAAE,CAAC;QACZ,QAAQ,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QACzB,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;QAC5B,QAAQ,EAAE,CAAC;QACX,SAAS,CAAC,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,CAAC;QACrC,QAAQ,EAAE,CAAC;QACX,QAAQ,EAAE,CAAC;QAGX,yBAAyB;QACzB,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,IAAI,GAAG,GAAG,CAAC,CAAC;QACZ,IAAI,GAAG,GAAG,CAAC,CAAC;QAEZ,OAAO,GAAG,CAAC,CAAC;QACZ,OAAO,GAAG,CAAC,CAAC;QAGZ,IAAI,CAAC,MAAM,CAAC,WAAW,GAAG,UAAU,CAAC;QAErC,IAAI,SAAS,GAAG,KAAK,CAAC,IAAI,CAAC;QAC3B,IAAI,KAAK,GAAG,KAAK,CAAC,KAAK,CAAC;QACxB,IAAI,MAAM,GAAG,KAAK,CAAC,MAAM,CAAC;QAE1B,IAAI,SAAS,GAAG,KAAK,GAAG,CAAC,CAAC;QAC1B,IAAI,WAAW,GAAG,KAAK,GAAG,CAAC,CAAC;QAE5B,IAAI,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC;QACb,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;QACZ,IAAI,KAAK,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;QAC5B,OAAO,CAAC,GAAG,MAAM,EAAE;YACf,CAAC,GAAG,CAAC,CAAC;YACN,OAAO,CAAC,GAAG,SAAS,EAAE;gBAClB,KAAK,GAAG,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC;gBAC1B,CAAC,GAAG,KAAK,CAAC;gBACV,GAAG,GAAG,CAAC,CAAC,CAAC;gBACT,GAAG,GAAG,CAAC,CAAC;gBAER,KAAK,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,EAAE,EAAE,GAAG,EAAE,EAAE;oBAC3B,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAA,KAAK;oBACpB,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK;oBAC1B,CAAC,GAAG,KAAK,GAAG,CAAC,GAAG,GAAG,SAAS,CAAC,GAAG,GAAG,CAAC;oBAEpC,IAAI,CAAC,GAAG,GAAG,IAAI,MAAM,EAAE,EAAE,iBAAiB;wBACtC,CAAC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC;qBAC7C;oBAED,IAAI,CAAC,GAAG,GAAG,IAAI,SAAS,EAAE,EAAE,iBAAiB;wBACzC,CAAC,IAAI,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,GAAG,SAAS,GAAG,CAAC,CAAC,CAAA;qBACnC;oBAED,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;oBACnB,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;oBACnB,CAAC,GAAG,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;oBAGnB;;;;sBAIE;oBAEF,qCAAqC;oBACrC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC;oBAC5G,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,IAAI,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC;oBAC3H,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,EAAE,CAAC,GAAG,GAAG,CAAC;iBAE/H;gBAED,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,OAAO,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;gBACnD,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;gBACtD,GAAG,GAAG,SAAS,CAAC,GAAG,EAAE,QAAQ,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC;gBACtD,CAAC,IAAI,EAAE,CAAC;aACX;YACD,CAAC,IAAI,CAAC,CAAC;SACV;QAGD,gEAAgE;QAEhE,yCAAyC;QACzC,IAAI,OAAO,IAAI,CAAC,EAAE;YACd,IAAI,QAAQ,GAAG,EAAE,CAAC;YAClB,QAAQ,CAAC,CAAC,CAAC,GAAG,OAAO,GAAG,CAAC,CAAC;YAC1B,QAAQ,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;YACvC,SAAS,CAAC,QAAQ,CAAC,CAAC;SACvB;QAED,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK;QAEzB,OAAO,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC;QAE9B,IAAI,WAAW,GAAG,yBAAyB,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;QAErE,OAAO,GAAG,EAAE,CAAC;QAEb,eAAe;QACf,IAAI,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,UAAU,CAAC;QACjD,kDAAkD;QAClD,EAAE;QAEF,OAAO,WAAW,CAAA;IACtB,CAAC,CAAA;IAED,SAAS,UAAU,CAAC,OAAO;QACvB,IAAI,OAAO,IAAI,CAAC,EAAE;YACd,OAAO,GAAG,CAAC,CAAC;SACf;QACD,IAAI,OAAO,GAAG,GAAG,EAAE;YACf,OAAO,GAAG,GAAG,CAAC;SACjB;QAED,IAAI,cAAc,IAAI,OAAO;YAAE,OAAM,CAAC,4BAA4B;QAElE,IAAI,EAAE,GAAG,CAAC,CAAC;QACX,IAAI,OAAO,GAAG,EAAE,EAAE;YACd,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,OAAO,CAAC,CAAC;SACnC;aAAM;YACH,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,GAAG,OAAO,GAAG,CAAC,CAAC,CAAC;SACtC;QAED,eAAe,CAAC,EAAE,CAAC,CAAC;QACpB,cAAc,GAAG,OAAO,CAAC;QACzB,+CAA+C;IACnD,CAAC;IAED,SAAS,IAAI;QACT,IAAI,UAAU,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,CAAC;QACtC,IAAI,CAAC,OAAO;YAAE,OAAO,GAAG,EAAE,CAAC;QAC3B,gBAAgB;QAChB,mBAAmB,EAAE,CAAA;QACrB,cAAc,EAAE,CAAC;QACjB,kBAAkB,EAAE,CAAC;QACrB,eAAe,EAAE,CAAC;QAElB,UAAU,CAAC,OAAO,CAAC,CAAC;QACpB,IAAI,QAAQ,GAAG,IAAI,IAAI,EAAE,CAAC,OAAO,EAAE,GAAG,UAAU,CAAC;QACjD,kDAAkD;IACtD,CAAC;IAED,IAAI,EAAE,CAAC;AAEX,CAAC;AAAA,CAAC;AAIF,SAAgB,SAAS,CAAC,OAAO,EAAE,EAAE;IACjC,IAAI,OAAO,EAAE,KAAK,WAAW;QAAE,EAAE,GAAG,EAAE,CAAC;IACvC,IAAI,OAAO,GAAG,IAAI,WAAW,CAAC,EAAE,CAAC,CAAC;IAClC,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IACvC,OAAO;QACH,IAAI,EAAE,IAAI;QACV,KAAK,EAAE,OAAO,CAAC,KAAK;QACpB,MAAM,EAAE,OAAO,CAAC,MAAM;KACzB,CAAC;AACN,CAAC;AATD,8BASC;AAED,iFAAiF;AACjF,SAAS,qBAAqB,CAAC,WAAW;IACtC,IAAI,MAAM,GAAG,CAAC,OAAO,CAAC,WAAW,CAAC,IAAI,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC;IACrG,IAAI,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;IAC3C,GAAG,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;IACzB,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC;IAC3B,IAAI,GAAG,GAAG,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC/B,GAAG,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAE5B,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC;AAC3D,CAAC;AAIC,+DAA+D","file":"","sourceRoot":"/","sourcesContent":["/*\r\n  Copyright (c) 2008, Adobe Systems Incorporated\r\n  All rights reserved.\r\n  Redistribution and use in source and binary forms, with or without \r\n  modification, are permitted provided that the following conditions are\r\n  met:\r\n  * Redistributions of source code must retain the above copyright notice, \r\n    this list of conditions and the following disclaimer.\r\n  \r\n  * Redistributions in binary form must reproduce the above copyright\r\n    notice, this list of conditions and the following disclaimer in the \r\n    documentation and/or other materials provided with the distribution.\r\n  \r\n  * Neither the name of Adobe Systems Incorporated nor the names of its \r\n    contributors may be used to endorse or promote products derived from \r\n    this software without specific prior written permission.\r\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS\r\n  IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO,\r\n  THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR\r\n  PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR \r\n  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\r\n  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\r\n  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF\r\n  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\r\n  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\r\n  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\r\n*/\r\n/*\r\nJPEG encoder ported to JavaScript and optimized by Andreas Ritter, www.bytestrom.eu, 11/2009\r\nBasic GUI blocking jpeg encoder\r\n*/\r\n\r\n// var btoa = btoa || function (buf) {\r\n//     return Buffer.from(buf).toString('base64');\r\n// };\r\n\r\nfunction JPEGEncoder(quality) {\r\n    var self = this;\r\n    var fround = Math.round;\r\n    var ffloor = Math.floor;\r\n    var YTable = new Array(64);\r\n    var UVTable = new Array(64);\r\n    var fdtbl_Y = new Array(64);\r\n    var fdtbl_UV = new Array(64);\r\n    var YDC_HT;\r\n    var UVDC_HT;\r\n    var YAC_HT;\r\n    var UVAC_HT;\r\n\r\n    var bitcode = new Array(65535);\r\n    var category = new Array(65535);\r\n    var outputfDCTQuant = new Array(64);\r\n    var DU = new Array(64);\r\n    var byteout = [];\r\n    var bytenew = 0;\r\n    var bytepos = 7;\r\n\r\n    var YDU = new Array(64);\r\n    var UDU = new Array(64);\r\n    var VDU = new Array(64);\r\n    var clt = new Array(256);\r\n    var RGB_YUV_TABLE = new Array(2048);\r\n    var currentQuality;\r\n\r\n    var ZigZag = [\r\n        0, 1, 5, 6, 14, 15, 27, 28,\r\n        2, 4, 7, 13, 16, 26, 29, 42,\r\n        3, 8, 12, 17, 25, 30, 41, 43,\r\n        9, 11, 18, 24, 31, 40, 44, 53,\r\n        10, 19, 23, 32, 39, 45, 52, 54,\r\n        20, 22, 33, 38, 46, 51, 55, 60,\r\n        21, 34, 37, 47, 50, 56, 59, 61,\r\n        35, 36, 48, 49, 57, 58, 62, 63\r\n    ];\r\n\r\n    var std_dc_luminance_nrcodes = [0, 0, 1, 5, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0];\r\n    var std_dc_luminance_values = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\r\n    var std_ac_luminance_nrcodes = [0, 0, 2, 1, 3, 3, 2, 4, 3, 5, 5, 4, 4, 0, 0, 1, 0x7d];\r\n    var std_ac_luminance_values = [\r\n        0x01, 0x02, 0x03, 0x00, 0x04, 0x11, 0x05, 0x12,\r\n        0x21, 0x31, 0x41, 0x06, 0x13, 0x51, 0x61, 0x07,\r\n        0x22, 0x71, 0x14, 0x32, 0x81, 0x91, 0xa1, 0x08,\r\n        0x23, 0x42, 0xb1, 0xc1, 0x15, 0x52, 0xd1, 0xf0,\r\n        0x24, 0x33, 0x62, 0x72, 0x82, 0x09, 0x0a, 0x16,\r\n        0x17, 0x18, 0x19, 0x1a, 0x25, 0x26, 0x27, 0x28,\r\n        0x29, 0x2a, 0x34, 0x35, 0x36, 0x37, 0x38, 0x39,\r\n        0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49,\r\n        0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59,\r\n        0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69,\r\n        0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79,\r\n        0x7a, 0x83, 0x84, 0x85, 0x86, 0x87, 0x88, 0x89,\r\n        0x8a, 0x92, 0x93, 0x94, 0x95, 0x96, 0x97, 0x98,\r\n        0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5, 0xa6, 0xa7,\r\n        0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4, 0xb5, 0xb6,\r\n        0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3, 0xc4, 0xc5,\r\n        0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2, 0xd3, 0xd4,\r\n        0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda, 0xe1, 0xe2,\r\n        0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9, 0xea,\r\n        0xf1, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8,\r\n        0xf9, 0xfa\r\n    ];\r\n\r\n    var std_dc_chrominance_nrcodes = [0, 0, 3, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0];\r\n    var std_dc_chrominance_values = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11];\r\n    var std_ac_chrominance_nrcodes = [0, 0, 2, 1, 2, 4, 4, 3, 4, 7, 5, 4, 4, 0, 1, 2, 0x77];\r\n    var std_ac_chrominance_values = [\r\n        0x00, 0x01, 0x02, 0x03, 0x11, 0x04, 0x05, 0x21,\r\n        0x31, 0x06, 0x12, 0x41, 0x51, 0x07, 0x61, 0x71,\r\n        0x13, 0x22, 0x32, 0x81, 0x08, 0x14, 0x42, 0x91,\r\n        0xa1, 0xb1, 0xc1, 0x09, 0x23, 0x33, 0x52, 0xf0,\r\n        0x15, 0x62, 0x72, 0xd1, 0x0a, 0x16, 0x24, 0x34,\r\n        0xe1, 0x25, 0xf1, 0x17, 0x18, 0x19, 0x1a, 0x26,\r\n        0x27, 0x28, 0x29, 0x2a, 0x35, 0x36, 0x37, 0x38,\r\n        0x39, 0x3a, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48,\r\n        0x49, 0x4a, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58,\r\n        0x59, 0x5a, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68,\r\n        0x69, 0x6a, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78,\r\n        0x79, 0x7a, 0x82, 0x83, 0x84, 0x85, 0x86, 0x87,\r\n        0x88, 0x89, 0x8a, 0x92, 0x93, 0x94, 0x95, 0x96,\r\n        0x97, 0x98, 0x99, 0x9a, 0xa2, 0xa3, 0xa4, 0xa5,\r\n        0xa6, 0xa7, 0xa8, 0xa9, 0xaa, 0xb2, 0xb3, 0xb4,\r\n        0xb5, 0xb6, 0xb7, 0xb8, 0xb9, 0xba, 0xc2, 0xc3,\r\n        0xc4, 0xc5, 0xc6, 0xc7, 0xc8, 0xc9, 0xca, 0xd2,\r\n        0xd3, 0xd4, 0xd5, 0xd6, 0xd7, 0xd8, 0xd9, 0xda,\r\n        0xe2, 0xe3, 0xe4, 0xe5, 0xe6, 0xe7, 0xe8, 0xe9,\r\n        0xea, 0xf2, 0xf3, 0xf4, 0xf5, 0xf6, 0xf7, 0xf8,\r\n        0xf9, 0xfa\r\n    ];\r\n\r\n    function initQuantTables(sf) {\r\n        var YQT = [\r\n            16, 11, 10, 16, 24, 40, 51, 61,\r\n            12, 12, 14, 19, 26, 58, 60, 55,\r\n            14, 13, 16, 24, 40, 57, 69, 56,\r\n            14, 17, 22, 29, 51, 87, 80, 62,\r\n            18, 22, 37, 56, 68, 109, 103, 77,\r\n            24, 35, 55, 64, 81, 104, 113, 92,\r\n            49, 64, 78, 87, 103, 121, 120, 101,\r\n            72, 92, 95, 98, 112, 100, 103, 99\r\n        ];\r\n\r\n        for (var i = 0; i < 64; i++) {\r\n            var t = ffloor((YQT[i] * sf + 50) / 100);\r\n            if (t < 1) {\r\n                t = 1;\r\n            } else if (t > 255) {\r\n                t = 255;\r\n            }\r\n            YTable[ZigZag[i]] = t;\r\n        }\r\n        var UVQT = [\r\n            17, 18, 24, 47, 99, 99, 99, 99,\r\n            18, 21, 26, 66, 99, 99, 99, 99,\r\n            24, 26, 56, 99, 99, 99, 99, 99,\r\n            47, 66, 99, 99, 99, 99, 99, 99,\r\n            99, 99, 99, 99, 99, 99, 99, 99,\r\n            99, 99, 99, 99, 99, 99, 99, 99,\r\n            99, 99, 99, 99, 99, 99, 99, 99,\r\n            99, 99, 99, 99, 99, 99, 99, 99\r\n        ];\r\n        for (var j = 0; j < 64; j++) {\r\n            var u = ffloor((UVQT[j] * sf + 50) / 100);\r\n            if (u < 1) {\r\n                u = 1;\r\n            } else if (u > 255) {\r\n                u = 255;\r\n            }\r\n            UVTable[ZigZag[j]] = u;\r\n        }\r\n        var aasf = [\r\n            1.0, 1.387039845, 1.306562965, 1.175875602,\r\n            1.0, 0.785694958, 0.541196100, 0.275899379\r\n        ];\r\n        var k = 0;\r\n        for (var row = 0; row < 8; row++) {\r\n            for (var col = 0; col < 8; col++) {\r\n                fdtbl_Y[k] = (1.0 / (YTable[ZigZag[k]] * aasf[row] * aasf[col] * 8.0));\r\n                fdtbl_UV[k] = (1.0 / (UVTable[ZigZag[k]] * aasf[row] * aasf[col] * 8.0));\r\n                k++;\r\n            }\r\n        }\r\n    }\r\n\r\n    function computeHuffmanTbl(nrcodes, std_table) {\r\n        var codevalue = 0;\r\n        var pos_in_table = 0;\r\n        var HT = new Array();\r\n        for (var k = 1; k <= 16; k++) {\r\n            for (var j = 1; j <= nrcodes[k]; j++) {\r\n                HT[std_table[pos_in_table]] = [];\r\n                HT[std_table[pos_in_table]][0] = codevalue;\r\n                HT[std_table[pos_in_table]][1] = k;\r\n                pos_in_table++;\r\n                codevalue++;\r\n            }\r\n            codevalue *= 2;\r\n        }\r\n        return HT;\r\n    }\r\n\r\n    function initHuffmanTbl() {\r\n        YDC_HT = computeHuffmanTbl(std_dc_luminance_nrcodes, std_dc_luminance_values);\r\n        UVDC_HT = computeHuffmanTbl(std_dc_chrominance_nrcodes, std_dc_chrominance_values);\r\n        YAC_HT = computeHuffmanTbl(std_ac_luminance_nrcodes, std_ac_luminance_values);\r\n        UVAC_HT = computeHuffmanTbl(std_ac_chrominance_nrcodes, std_ac_chrominance_values);\r\n    }\r\n\r\n    function initCategoryNumber() {\r\n        var nrlower = 1;\r\n        var nrupper = 2;\r\n        for (var cat = 1; cat <= 15; cat++) {\r\n            //Positive numbers\r\n            for (var nr = nrlower; nr < nrupper; nr++) {\r\n                category[32767 + nr] = cat;\r\n                bitcode[32767 + nr] = [];\r\n                bitcode[32767 + nr][1] = cat;\r\n                bitcode[32767 + nr][0] = nr;\r\n            }\r\n            //Negative numbers\r\n            for (var nrneg = -(nrupper - 1); nrneg <= -nrlower; nrneg++) {\r\n                category[32767 + nrneg] = cat;\r\n                bitcode[32767 + nrneg] = [];\r\n                bitcode[32767 + nrneg][1] = cat;\r\n                bitcode[32767 + nrneg][0] = nrupper - 1 + nrneg;\r\n            }\r\n            nrlower <<= 1;\r\n            nrupper <<= 1;\r\n        }\r\n    }\r\n\r\n    function initRGBYUVTable() {\r\n        for (var i = 0; i < 256; i++) {\r\n            RGB_YUV_TABLE[i] = 19595 * i;\r\n            RGB_YUV_TABLE[(i + 256) >> 0] = 38470 * i;\r\n            RGB_YUV_TABLE[(i + 512) >> 0] = 7471 * i + 0x8000;\r\n            RGB_YUV_TABLE[(i + 768) >> 0] = -11059 * i;\r\n            RGB_YUV_TABLE[(i + 1024) >> 0] = -21709 * i;\r\n            RGB_YUV_TABLE[(i + 1280) >> 0] = 32768 * i + 0x807FFF;\r\n            RGB_YUV_TABLE[(i + 1536) >> 0] = -27439 * i;\r\n            RGB_YUV_TABLE[(i + 1792) >> 0] = - 5329 * i;\r\n        }\r\n    }\r\n\r\n    // IO functions\r\n    function writeBits(bs) {\r\n        var value = bs[0];\r\n        var posval = bs[1] - 1;\r\n        while (posval >= 0) {\r\n            if (value & (1 << posval)) {\r\n                bytenew |= (1 << bytepos);\r\n            }\r\n            posval--;\r\n            bytepos--;\r\n            if (bytepos < 0) {\r\n                if (bytenew == 0xFF) {\r\n                    writeByte(0xFF);\r\n                    writeByte(0);\r\n                }\r\n                else {\r\n                    writeByte(bytenew);\r\n                }\r\n                bytepos = 7;\r\n                bytenew = 0;\r\n            }\r\n        }\r\n    }\r\n\r\n    function writeByte(value) {\r\n        //byteout.push(clt[value]); // write char directly instead of converting later\r\n        byteout.push(value);\r\n    }\r\n\r\n    function writeWord(value) {\r\n        writeByte((value >> 8) & 0xFF);\r\n        writeByte((value) & 0xFF);\r\n    }\r\n\r\n    // DCT & quantization core\r\n    function fDCTQuant(data, fdtbl) {\r\n        var d0, d1, d2, d3, d4, d5, d6, d7;\r\n        /* Pass 1: process rows. */\r\n        var dataOff = 0;\r\n        var i;\r\n        var I8 = 8;\r\n        var I64 = 64;\r\n        for (i = 0; i < I8; ++i) {\r\n            d0 = data[dataOff];\r\n            d1 = data[dataOff + 1];\r\n            d2 = data[dataOff + 2];\r\n            d3 = data[dataOff + 3];\r\n            d4 = data[dataOff + 4];\r\n            d5 = data[dataOff + 5];\r\n            d6 = data[dataOff + 6];\r\n            d7 = data[dataOff + 7];\r\n\r\n            var tmp0 = d0 + d7;\r\n            var tmp7 = d0 - d7;\r\n            var tmp1 = d1 + d6;\r\n            var tmp6 = d1 - d6;\r\n            var tmp2 = d2 + d5;\r\n            var tmp5 = d2 - d5;\r\n            var tmp3 = d3 + d4;\r\n            var tmp4 = d3 - d4;\r\n\r\n            /* Even part */\r\n            var tmp10 = tmp0 + tmp3;\t/* phase 2 */\r\n            var tmp13 = tmp0 - tmp3;\r\n            var tmp11 = tmp1 + tmp2;\r\n            var tmp12 = tmp1 - tmp2;\r\n\r\n            data[dataOff] = tmp10 + tmp11; /* phase 3 */\r\n            data[dataOff + 4] = tmp10 - tmp11;\r\n\r\n            var z1 = (tmp12 + tmp13) * 0.707106781; /* c4 */\r\n            data[dataOff + 2] = tmp13 + z1; /* phase 5 */\r\n            data[dataOff + 6] = tmp13 - z1;\r\n\r\n            /* Odd part */\r\n            tmp10 = tmp4 + tmp5; /* phase 2 */\r\n            tmp11 = tmp5 + tmp6;\r\n            tmp12 = tmp6 + tmp7;\r\n\r\n            /* The rotator is modified from fig 4-8 to avoid extra negations. */\r\n            var z5 = (tmp10 - tmp12) * 0.382683433; /* c6 */\r\n            var z2 = 0.541196100 * tmp10 + z5; /* c2-c6 */\r\n            var z4 = 1.306562965 * tmp12 + z5; /* c2+c6 */\r\n            var z3 = tmp11 * 0.707106781; /* c4 */\r\n\r\n            var z11 = tmp7 + z3;\t/* phase 5 */\r\n            var z13 = tmp7 - z3;\r\n\r\n            data[dataOff + 5] = z13 + z2;\t/* phase 6 */\r\n            data[dataOff + 3] = z13 - z2;\r\n            data[dataOff + 1] = z11 + z4;\r\n            data[dataOff + 7] = z11 - z4;\r\n\r\n            dataOff += 8; /* advance pointer to next row */\r\n        }\r\n\r\n        /* Pass 2: process columns. */\r\n        dataOff = 0;\r\n        for (i = 0; i < I8; ++i) {\r\n            d0 = data[dataOff];\r\n            d1 = data[dataOff + 8];\r\n            d2 = data[dataOff + 16];\r\n            d3 = data[dataOff + 24];\r\n            d4 = data[dataOff + 32];\r\n            d5 = data[dataOff + 40];\r\n            d6 = data[dataOff + 48];\r\n            d7 = data[dataOff + 56];\r\n\r\n            var tmp0p2 = d0 + d7;\r\n            var tmp7p2 = d0 - d7;\r\n            var tmp1p2 = d1 + d6;\r\n            var tmp6p2 = d1 - d6;\r\n            var tmp2p2 = d2 + d5;\r\n            var tmp5p2 = d2 - d5;\r\n            var tmp3p2 = d3 + d4;\r\n            var tmp4p2 = d3 - d4;\r\n\r\n            /* Even part */\r\n            var tmp10p2 = tmp0p2 + tmp3p2;\t/* phase 2 */\r\n            var tmp13p2 = tmp0p2 - tmp3p2;\r\n            var tmp11p2 = tmp1p2 + tmp2p2;\r\n            var tmp12p2 = tmp1p2 - tmp2p2;\r\n\r\n            data[dataOff] = tmp10p2 + tmp11p2; /* phase 3 */\r\n            data[dataOff + 32] = tmp10p2 - tmp11p2;\r\n\r\n            var z1p2 = (tmp12p2 + tmp13p2) * 0.707106781; /* c4 */\r\n            data[dataOff + 16] = tmp13p2 + z1p2; /* phase 5 */\r\n            data[dataOff + 48] = tmp13p2 - z1p2;\r\n\r\n            /* Odd part */\r\n            tmp10p2 = tmp4p2 + tmp5p2; /* phase 2 */\r\n            tmp11p2 = tmp5p2 + tmp6p2;\r\n            tmp12p2 = tmp6p2 + tmp7p2;\r\n\r\n            /* The rotator is modified from fig 4-8 to avoid extra negations. */\r\n            var z5p2 = (tmp10p2 - tmp12p2) * 0.382683433; /* c6 */\r\n            var z2p2 = 0.541196100 * tmp10p2 + z5p2; /* c2-c6 */\r\n            var z4p2 = 1.306562965 * tmp12p2 + z5p2; /* c2+c6 */\r\n            var z3p2 = tmp11p2 * 0.707106781; /* c4 */\r\n\r\n            var z11p2 = tmp7p2 + z3p2;\t/* phase 5 */\r\n            var z13p2 = tmp7p2 - z3p2;\r\n\r\n            data[dataOff + 40] = z13p2 + z2p2; /* phase 6 */\r\n            data[dataOff + 24] = z13p2 - z2p2;\r\n            data[dataOff + 8] = z11p2 + z4p2;\r\n            data[dataOff + 56] = z11p2 - z4p2;\r\n\r\n            dataOff++; /* advance pointer to next column */\r\n        }\r\n\r\n        // Quantize/descale the coefficients\r\n        var fDCTQuant;\r\n        for (i = 0; i < I64; ++i) {\r\n            // Apply the quantization and scaling factor & Round to nearest integer\r\n            fDCTQuant = data[i] * fdtbl[i];\r\n            outputfDCTQuant[i] = (fDCTQuant > 0.0) ? ((fDCTQuant + 0.5) | 0) : ((fDCTQuant - 0.5) | 0);\r\n            //outputfDCTQuant[i] = fround(fDCTQuant);\r\n\r\n        }\r\n        return outputfDCTQuant;\r\n    }\r\n\r\n    function writeAPP0() {\r\n        writeWord(0xFFE0); // marker\r\n        writeWord(16); // length\r\n        writeByte(0x4A); // J\r\n        writeByte(0x46); // F\r\n        writeByte(0x49); // I\r\n        writeByte(0x46); // F\r\n        writeByte(0); // = \"JFIF\",'\\0'\r\n        writeByte(1); // versionhi\r\n        writeByte(1); // versionlo\r\n        writeByte(0); // xyunits\r\n        writeWord(1); // xdensity\r\n        writeWord(1); // ydensity\r\n        writeByte(0); // thumbnwidth\r\n        writeByte(0); // thumbnheight\r\n    }\r\n\r\n    function writeAPP1(exifBuffer) {\r\n        if (!exifBuffer) return;\r\n\r\n        writeWord(0xFFE1); // APP1 marker\r\n\r\n        if (exifBuffer[0] === 0x45 &&\r\n            exifBuffer[1] === 0x78 &&\r\n            exifBuffer[2] === 0x69 &&\r\n            exifBuffer[3] === 0x66) {\r\n            // Buffer already starts with EXIF, just use it directly\r\n            writeWord(exifBuffer.length + 2); // length is buffer + length itself!\r\n        } else {\r\n            // Buffer doesn't start with EXIF, write it for them\r\n            writeWord(exifBuffer.length + 5 + 2); // length is buffer + EXIF\\0 + length itself!\r\n            writeByte(0x45); // E\r\n            writeByte(0x78); // X\r\n            writeByte(0x69); // I\r\n            writeByte(0x66); // F\r\n            writeByte(0); // = \"EXIF\",'\\0'\r\n        }\r\n\r\n        for (var i = 0; i < exifBuffer.length; i++) {\r\n            writeByte(exifBuffer[i]);\r\n        }\r\n    }\r\n\r\n    function writeSOF0(width, height) {\r\n        writeWord(0xFFC0); // marker\r\n        writeWord(17);   // length, truecolor YUV JPG\r\n        writeByte(8);    // precision\r\n        writeWord(height);\r\n        writeWord(width);\r\n        writeByte(3);    // nrofcomponents\r\n        writeByte(1);    // IdY\r\n        writeByte(0x11); // HVY\r\n        writeByte(0);    // QTY\r\n        writeByte(2);    // IdU\r\n        writeByte(0x11); // HVU\r\n        writeByte(1);    // QTU\r\n        writeByte(3);    // IdV\r\n        writeByte(0x11); // HVV\r\n        writeByte(1);    // QTV\r\n    }\r\n\r\n    function writeDQT() {\r\n        writeWord(0xFFDB); // marker\r\n        writeWord(132);\t   // length\r\n        writeByte(0);\r\n        for (var i = 0; i < 64; i++) {\r\n            writeByte(YTable[i]);\r\n        }\r\n        writeByte(1);\r\n        for (var j = 0; j < 64; j++) {\r\n            writeByte(UVTable[j]);\r\n        }\r\n    }\r\n\r\n    function writeDHT() {\r\n        writeWord(0xFFC4); // marker\r\n        writeWord(0x01A2); // length\r\n\r\n        writeByte(0); // HTYDCinfo\r\n        for (var i = 0; i < 16; i++) {\r\n            writeByte(std_dc_luminance_nrcodes[i + 1]);\r\n        }\r\n        for (var j = 0; j <= 11; j++) {\r\n            writeByte(std_dc_luminance_values[j]);\r\n        }\r\n\r\n        writeByte(0x10); // HTYACinfo\r\n        for (var k = 0; k < 16; k++) {\r\n            writeByte(std_ac_luminance_nrcodes[k + 1]);\r\n        }\r\n        for (var l = 0; l <= 161; l++) {\r\n            writeByte(std_ac_luminance_values[l]);\r\n        }\r\n\r\n        writeByte(1); // HTUDCinfo\r\n        for (var m = 0; m < 16; m++) {\r\n            writeByte(std_dc_chrominance_nrcodes[m + 1]);\r\n        }\r\n        for (var n = 0; n <= 11; n++) {\r\n            writeByte(std_dc_chrominance_values[n]);\r\n        }\r\n\r\n        writeByte(0x11); // HTUACinfo\r\n        for (var o = 0; o < 16; o++) {\r\n            writeByte(std_ac_chrominance_nrcodes[o + 1]);\r\n        }\r\n        for (var p = 0; p <= 161; p++) {\r\n            writeByte(std_ac_chrominance_values[p]);\r\n        }\r\n    }\r\n\r\n    function writeCOM(comments) {\r\n        if (typeof comments === \"undefined\" || comments.constructor !== Array) return;\r\n        comments.forEach(e => {\r\n            if (typeof e !== \"string\") return;\r\n            writeWord(0xFFFE); // marker\r\n            var l = e.length;\r\n            writeWord(l + 2); // length itself as well\r\n            var i;\r\n            for (i = 0; i < l; i++)\r\n                writeByte(e.charCodeAt(i));\r\n        });\r\n    }\r\n\r\n    function writeSOS() {\r\n        writeWord(0xFFDA); // marker\r\n        writeWord(12); // length\r\n        writeByte(3); // nrofcomponents\r\n        writeByte(1); // IdY\r\n        writeByte(0); // HTY\r\n        writeByte(2); // IdU\r\n        writeByte(0x11); // HTU\r\n        writeByte(3); // IdV\r\n        writeByte(0x11); // HTV\r\n        writeByte(0); // Ss\r\n        writeByte(0x3f); // Se\r\n        writeByte(0); // Bf\r\n    }\r\n\r\n    function processDU(CDU, fdtbl, DC, HTDC, HTAC) {\r\n        var EOB = HTAC[0x00];\r\n        var M16zeroes = HTAC[0xF0];\r\n        var pos;\r\n        var I16 = 16;\r\n        var I63 = 63;\r\n        var I64 = 64;\r\n        var DU_DCT = fDCTQuant(CDU, fdtbl);\r\n        //ZigZag reorder\r\n        for (var j = 0; j < I64; ++j) {\r\n            DU[ZigZag[j]] = DU_DCT[j];\r\n        }\r\n        var Diff = DU[0] - DC; DC = DU[0];\r\n        //Encode DC\r\n        if (Diff == 0) {\r\n            writeBits(HTDC[0]); // Diff might be 0\r\n        } else {\r\n            pos = 32767 + Diff;\r\n            writeBits(HTDC[category[pos]]);\r\n            writeBits(bitcode[pos]);\r\n        }\r\n        //Encode ACs\r\n        var end0pos = 63; // was const... which is crazy\r\n        for (; (end0pos > 0) && (DU[end0pos] == 0); end0pos--) { };\r\n        //end0pos = first element in reverse order !=0\r\n        if (end0pos == 0) {\r\n            writeBits(EOB);\r\n            return DC;\r\n        }\r\n        var i = 1;\r\n        var lng;\r\n        while (i <= end0pos) {\r\n            var startpos = i;\r\n            for (; (DU[i] == 0) && (i <= end0pos); ++i) { }\r\n            var nrzeroes = i - startpos;\r\n            if (nrzeroes >= I16) {\r\n                lng = nrzeroes >> 4;\r\n                for (var nrmarker = 1; nrmarker <= lng; ++nrmarker)\r\n                    writeBits(M16zeroes);\r\n                nrzeroes = nrzeroes & 0xF;\r\n            }\r\n            pos = 32767 + DU[i];\r\n            writeBits(HTAC[(nrzeroes << 4) + category[pos]]);\r\n            writeBits(bitcode[pos]);\r\n            i++;\r\n        }\r\n        if (end0pos != I63) {\r\n            writeBits(EOB);\r\n        }\r\n        return DC;\r\n    }\r\n\r\n    function initCharLookupTable() {\r\n        var sfcc = String.fromCharCode;\r\n        for (var i = 0; i < 256; i++) { ///// ACHTUNG // 255\r\n            clt[i] = sfcc(i);\r\n        }\r\n    }\r\n\r\n    this.encode = function (image, quality) // image data object\r\n    {\r\n        var time_start = new Date().getTime();\r\n\r\n        if (quality) setQuality(quality);\r\n\r\n        // Initialize bit writer\r\n        byteout = new Array();\r\n        bytenew = 0;\r\n        bytepos = 7;\r\n\r\n        // Add JPEG headers\r\n        writeWord(0xFFD8); // SOI\r\n        writeAPP0();\r\n        writeCOM(image.comments);\r\n        writeAPP1(image.exifBuffer);\r\n        writeDQT();\r\n        writeSOF0(image.width, image.height);\r\n        writeDHT();\r\n        writeSOS();\r\n\r\n\r\n        // Encode 8x8 macroblocks\r\n        var DCY = 0;\r\n        var DCU = 0;\r\n        var DCV = 0;\r\n\r\n        bytenew = 0;\r\n        bytepos = 7;\r\n\r\n\r\n        this.encode.displayName = \"_encode_\";\r\n\r\n        var imageData = image.data;\r\n        var width = image.width;\r\n        var height = image.height;\r\n\r\n        var quadWidth = width * 4;\r\n        var tripleWidth = width * 3;\r\n\r\n        var x, y = 0;\r\n        var r, g, b;\r\n        var start, p, col, row, pos;\r\n        while (y < height) {\r\n            x = 0;\r\n            while (x < quadWidth) {\r\n                start = quadWidth * y + x;\r\n                p = start;\r\n                col = -1;\r\n                row = 0;\r\n\r\n                for (pos = 0; pos < 64; pos++) {\r\n                    row = pos >> 3;// /8\r\n                    col = (pos & 7) * 4; // %8\r\n                    p = start + (row * quadWidth) + col;\r\n\r\n                    if (y + row >= height) { // padding bottom\r\n                        p -= (quadWidth * (y + 1 + row - height));\r\n                    }\r\n\r\n                    if (x + col >= quadWidth) { // padding right\t\r\n                        p -= ((x + col) - quadWidth + 4)\r\n                    }\r\n\r\n                    r = imageData[p++];\r\n                    g = imageData[p++];\r\n                    b = imageData[p++];\r\n\r\n\r\n                    /* // calculate YUV values dynamically\r\n                    YDU[pos]=((( 0.29900)*r+( 0.58700)*g+( 0.11400)*b))-128; //-0x80\r\n                    UDU[pos]=(((-0.16874)*r+(-0.33126)*g+( 0.50000)*b));\r\n                    VDU[pos]=((( 0.50000)*r+(-0.41869)*g+(-0.08131)*b));\r\n                    */\r\n\r\n                    // use lookup table (slightly faster)\r\n                    YDU[pos] = ((RGB_YUV_TABLE[r] + RGB_YUV_TABLE[(g + 256) >> 0] + RGB_YUV_TABLE[(b + 512) >> 0]) >> 16) - 128;\r\n                    UDU[pos] = ((RGB_YUV_TABLE[(r + 768) >> 0] + RGB_YUV_TABLE[(g + 1024) >> 0] + RGB_YUV_TABLE[(b + 1280) >> 0]) >> 16) - 128;\r\n                    VDU[pos] = ((RGB_YUV_TABLE[(r + 1280) >> 0] + RGB_YUV_TABLE[(g + 1536) >> 0] + RGB_YUV_TABLE[(b + 1792) >> 0]) >> 16) - 128;\r\n\r\n                }\r\n\r\n                DCY = processDU(YDU, fdtbl_Y, DCY, YDC_HT, YAC_HT);\r\n                DCU = processDU(UDU, fdtbl_UV, DCU, UVDC_HT, UVAC_HT);\r\n                DCV = processDU(VDU, fdtbl_UV, DCV, UVDC_HT, UVAC_HT);\r\n                x += 32;\r\n            }\r\n            y += 8;\r\n        }\r\n\r\n\r\n        ////////////////////////////////////////////////////////////////\r\n\r\n        // Do the bit alignment of the EOI marker\r\n        if (bytepos >= 0) {\r\n            var fillbits = [];\r\n            fillbits[1] = bytepos + 1;\r\n            fillbits[0] = (1 << (bytepos + 1)) - 1;\r\n            writeBits(fillbits);\r\n        }\r\n\r\n        writeWord(0xFFD9); //EOI\r\n\r\n       return new Uint8Array(byteout);\r\n      \r\n        var jpegDataUri = 'data:image/jpeg;base64,' + btoa(byteout.join(''));\r\n\r\n        byteout = [];\r\n\r\n        // benchmarking\r\n        var duration = new Date().getTime() - time_start;\r\n        //console.log('Encoding time: '+ duration + 'ms');\r\n        //\r\n\r\n        return jpegDataUri\r\n    }\r\n\r\n    function setQuality(quality) {\r\n        if (quality <= 0) {\r\n            quality = 1;\r\n        }\r\n        if (quality > 100) {\r\n            quality = 100;\r\n        }\r\n\r\n        if (currentQuality == quality) return // don't recalc if unchanged\r\n\r\n        var sf = 0;\r\n        if (quality < 50) {\r\n            sf = Math.floor(5000 / quality);\r\n        } else {\r\n            sf = Math.floor(200 - quality * 2);\r\n        }\r\n\r\n        initQuantTables(sf);\r\n        currentQuality = quality;\r\n        //console.log('Quality set to: '+quality +'%');\r\n    }\r\n\r\n    function init() {\r\n        var time_start = new Date().getTime();\r\n        if (!quality) quality = 50;\r\n        // Create tables\r\n        initCharLookupTable()\r\n        initHuffmanTbl();\r\n        initCategoryNumber();\r\n        initRGBYUVTable();\r\n\r\n        setQuality(quality);\r\n        var duration = new Date().getTime() - time_start;\r\n        //console.log('Initialization '+ duration + 'ms');\r\n    }\r\n\r\n    init();\r\n\r\n};\r\n\r\n \r\n\r\nexport function encodeJPG(imgData, qu) {\r\n    if (typeof qu === 'undefined') qu = 50;\r\n    var encoder = new JPEGEncoder(qu);\r\n    var data = encoder.encode(imgData, qu);\r\n    return {\r\n        data: data,\r\n        width: imgData.width,\r\n        height: imgData.height,\r\n    };\r\n}\r\n\r\n// helper function to get the imageData of an existing image on the current page.\r\nfunction getImageDataFromImage(idOrElement) {\r\n    var theImg = (typeof (idOrElement) == 'string') ? document.getElementById(idOrElement) : idOrElement;\r\n    var cvs = document.createElement('canvas');\r\n    cvs.width = theImg.width;\r\n    cvs.height = theImg.height;\r\n    var ctx = cvs.getContext(\"2d\");\r\n    ctx.drawImage(theImg, 0, 0);\r\n\r\n    return (ctx.getImageData(0, 0, cvs.width, cvs.height));\r\n}\r\n\r\n\r\n\r\n  //https://github.com/jpeg-js/jpeg-js/blob/master/lib/encoder.js"]}