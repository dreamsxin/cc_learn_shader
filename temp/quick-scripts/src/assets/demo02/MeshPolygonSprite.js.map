{"version":3,"sources":["assets/demo02/MeshPolygonSprite.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"/","sourcesContent":["// author: http://lamyoung.com/\n\n// https://mp.weixin.qq.com/s/EkMP_UcFcWTlSn_4Ml8zsA\n\nconst gfx = cc.gfx;\n\nconst { ccclass, property, executeInEditMode, requireComponent, menu } = cc._decorator;\n\n@ccclass\n@executeInEditMode\n@requireComponent(cc.MeshRenderer)\n@menu(\"lamyoung.com/MeshPolygonSprite\")\nexport default class MeshPolygonSprite extends cc.Component {\n    @property\n    _offset: cc.Vec2 = cc.v2(0, 0)\n    /**\n     * !#en Position offset\n     * !#zh 位置偏移量\n     * @property offset\n     * @type {Vec2}\n     */\n    get offset() {\n        return this._offset;\n    }\n    @property({ type: cc.Vec2, tooltip: '位置偏移量' })\n    set offset(value) {\n        this._offset = value;\n        this._updateMesh();\n        this._applyVertexes();\n    }\n\n    @property\n    _spriteFrame: cc.SpriteFrame = null;\n    /**\n    * !#en The sprite frame of the sprite.\n    * !#zh 精灵的精灵帧\n    * @property spriteFrame\n    * @type {SpriteFrame}\n    * @example\n    * sprite.spriteFrame = newSpriteFrame;\n    */\n    get spriteFrame() {\n        return this._spriteFrame;\n    }\n    @property({ type: cc.SpriteFrame, tooltip: '精灵的精灵帧' })\n    set spriteFrame(value) {\n        this._spriteFrame = value;\n        this._refreshAll();\n    }\n\n    @property\n    _vertexes: cc.Vec2[] = [cc.v2(0, 0), cc.v2(0, 100), cc.v2(100, 100), cc.v2(100, 0)]\n    /**\n     * !#en Position vertexes\n     * !#zh 顶点坐标\n     * @property vertexes\n     * @type {Vec2}\n     */\n    get vertexes() {\n        return this._vertexes;\n    }\n    @property({ type: cc.Vec2, tooltip: '顶点坐标' })\n    set vertexes(value) {\n        this._vertexes = value;\n        this._updateMesh();\n        this._applyVertexes();\n    }\n\n    private renderer: cc.MeshRenderer = null;\n    private mesh: cc.Mesh = null;\n    private _meshCache: { [key: number]: cc.Mesh } = {};\n\n    onLoad() {\n        this._meshCache = {};\n        const renderer = this.node.getComponent(cc.MeshRenderer) || this.node.addComponent(cc.MeshRenderer);\n\n        renderer.mesh = null;\n        this.renderer = renderer;\n\n        let builtinMaterial = cc.Material.getBuiltinMaterial(\"unlit\");//createWithBuiltin(\"unlit\");\n        renderer.setMaterial(0, builtinMaterial);\n    }\n\n    onEnable() {\n        this._refreshAll();\n    }\n\n    private _refreshAll() {\n        this._updateMesh();\n        this._applySpriteFrame();\n        this._applyVertexes();\n    }\n\n    private _updateMesh() {\n        \n        // cc.log('_updateMesh')\n        let mesh = this._meshCache[this.vertexes.length];\n        if (!mesh) {\n            mesh = new cc.Mesh();\n            mesh.init(new gfx.VertexFormat([\n                { name: gfx.ATTR_POSITION, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },\n                { name: gfx.ATTR_UV0, type: gfx.ATTR_TYPE_FLOAT32, num: 2 },\n            ]), this.vertexes.length, true);\n            this._meshCache[this.vertexes.length] = mesh;\n        }\n        cc.log(mesh.nativeUrl)\n        this.mesh = mesh;\n    }\n\n    private _lerp(a: number, b: number, w: number) {\n        return a + w * (b - a);\n    }\n\n\n    // 更新顶点\n    private _applyVertexes() {\n        // cc.log('_applyVertexes');\n\n        // 设置坐标\n        const mesh = this.mesh;\n        mesh.setVertices(gfx.ATTR_POSITION, this.vertexes);\n\n        this._calculateUV();\n\n        if (this.vertexes.length >= 3) {\n            // 计算顶点索引 \n            const ids = [];\n            // 多边形切割 poly2tri，支持简单的多边形，确保顶点按顺序且不自交\n            const countor = this.vertexes.map((p) => { return { x: p.x, y: p.y } });\n            const swctx = new poly2tri.SweepContext(countor, { cloneArrays: true });\n            // cc.log('countor', countor.length, countor);\n            try {\n                // 防止失败 使用try \n                swctx.triangulate();\n                // cc.log('triangulate');\n                const triangles = swctx.getTriangles();\n                // cc.log('triangles', triangles.length, triangles);\n\n                triangles.forEach((tri) => {\n                    tri.getPoints().forEach(p => {\n                        const i = countor.indexOf(p as any);\n                        ids.push(i);\n                    });\n                })\n            } catch (e) {\n                cc.error('poly2tri error', e);\n            }\n\n            if (ids.length === 0) {\n                cc.log('计算顶点索引 失败');\n                ids.push(...this.vertexes.map((v, i) => { return i }));\n            }\n            // cc.log('ids');\n            // cc.log(ids);\n            mesh.setIndices(ids);\n            \n            this.renderer.mesh = mesh;\n        }\n    }\n\n    private _calculateUV() {\n        const mesh = this.mesh;\n        if (this.spriteFrame) {\n            // cc.log('_calculateUV')\n            const uv = this.spriteFrame.uv;\n            const texture = this.spriteFrame.getTexture();\n            /**\n             *    t\n             * l     r\n             *    b\n             */\n            const uv_l = uv[0];\n            const uv_r = uv[6];\n            const uv_b = uv[3];\n            const uv_t = uv[5];\n\n            // cc.log('uv', uv)\n\n            // 计算uv\n            const uvs = [];\n            for (const pt of this.vertexes) {\n                const u = this._lerp(uv_l, uv_r, (pt.x + texture.width / 2 + this.offset.x) / texture.width);\n                const v = this._lerp(uv_b, uv_t, (pt.y + texture.height / 2 - this.offset.y) / texture.height);\n                uvs.push(cc.v2(u, v));\n            }\n            mesh.setVertices(gfx.ATTR_UV0, uvs);\n        }\n    }\n\n\n    // 更新图片\n    private _applySpriteFrame() {\n        // cc.log('_applySpriteFrame');\n        if (this.spriteFrame) {\n            const renderer = this.renderer;\n            let material = renderer.getMaterial(0);\n            // Reset material\n            let texture = this.spriteFrame.getTexture();\n            material.define(\"USE_DIFFUSE_TEXTURE\", true);\n            material.setProperty('diffuseTexture', texture);\n        }\n    }\n}\n\n\n/*\nhttps://mp.weixin.qq.com/s/Ht0kIbaeBEds_wUeUlu8JQ\n\n*/\n\n// 欢迎关注微信公众号[白玉无冰]\n\n/**\n█████████████████████████████████████\n█████████████████████████████████████\n████ ▄▄▄▄▄ █▀█ █▄██▀▄ ▄▄██ ▄▄▄▄▄ ████\n████ █   █ █▀▀▀█ ▀▄▀▀▀█▄▀█ █   █ ████\n████ █▄▄▄█ █▀ █▀▀▀ ▀▄▄ ▄ █ █▄▄▄█ ████\n████▄▄▄▄▄▄▄█▄▀ ▀▄█ ▀▄█▄▀ █▄▄▄▄▄▄▄████\n████▄▄  ▄▀▄▄ ▄▀▄▀▀▄▄▄ █ █ ▀ ▀▄█▄▀████\n████▀ ▄  █▄█▀█▄█▀█  ▀▄ █ ▀ ▄▄██▀█████\n████ ▄▀▄▄▀▄ █▄▄█▄ ▀▄▀ ▀ ▀ ▀▀▀▄ █▀████\n████▀ ██ ▀▄ ▄██ ▄█▀▄ ██▀ ▀ █▄█▄▀█████\n████   ▄██▄▀ █▀▄▀▄▀▄▄▄▄ ▀█▀ ▀▀ █▀████\n████ █▄ █ ▄ █▀ █▀▄█▄▄▄▄▀▄▄█▄▄▄▄▀█████\n████▄█▄█▄█▄█▀ ▄█▄   ▀▄██ ▄▄▄ ▀   ████\n████ ▄▄▄▄▄ █▄██ ▄█▀  ▄   █▄█  ▄▀█████\n████ █   █ █ ▄█▄ ▀  ▀▀██ ▄▄▄▄ ▄▀ ████\n████ █▄▄▄█ █ ▄▄▀ ▄█▄█▄█▄ ▀▄   ▄ █████\n████▄▄▄▄▄▄▄█▄██▄▄██▄▄▄█████▄▄█▄██████\n█████████████████████████████████████\n█████████████████████████████████████\n */"]}